{
    // Use cargo-3ds to drive "check on save". This avoids cache thrashing when alternating 
    // between rust-analyzer and running cargo-3ds from the command line
    "rust-analyzer.check.overrideCommand": [
        "cargo",
        "3ds",
        // or "clippy" if you want to use clippy
        "check",
        "--message-format=json-diagnostic-rendered-ansi",
    ],
    // even with overrideCommand, this is still needed for build scripts to work properly:
    "rust-analyzer.cargo.target": "armv6k-nintendo-3ds",
    "rust-analyzer.server.extraEnv": {
        // Adjust as needed to point to your installation of devkitPro:
        "DEVKITPRO": "/opt/devkitpro",
        "DEVKITARM": "/opt/devkitpro/devkitARM",
        // This should be the same as your usual $PATH, but with devkitPro paths added to the beginning.
        // Might not be necessary if you already added these to your host $PATH.
        "PATH": "/opt/devkitpro/devkitARM/bin:/opt/devkitpro/tools/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/Users/centdemeern1/bin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:/opt/homebrew/opt/llvm/bin:/Users/centdemeern1/.bun/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Library/TeX/texbin:/opt/devkitpro/tools/bin:/opt/podman/bin:/Users/centdemeern1/bin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:/opt/homebrew/opt/llvm/bin:/Users/centdemeern1/.bun/bin:/Users/centdemeern1/.cargo/bin:/opt/devkitpro/devkitARM/bin:/opt/devkitpro/devkitARM/bin",
    },
}